<nav aria-label="breadcrumb">
  <ol class="breadcrumb">
    <li class="breadcrumb-item"><a href="/">Home</a></li>
    <li class="breadcrumb-item"><a href="/services">Services</a></li>
    <li class="breadcrumb-item"><a href="/sessions?sid={{serviceSid}}">Sessions</a></li>
    <li class="breadcrumb-item active">Participants</li>
  </ol>
</nav>
<h3>Participants</h3>
<ul class="list-group">
    {{#each participants}}
    <li class="mb-2 rounded list-group-item">
        
        <span><a href="/interactions?sessionSid={{sessionSid}}&serviceSid={{serviceSid}}&participantName={{this.friendlyName}}&participantSid={{this.sid}}&participantPhone={{this.identifier}}&participantProxyNum={{this.proxyIdentifier}}">{{this.friendlyName}}</a>  ({{this.sid}})</span><br>
        <span class="ml ml-2">Participant # ({{this.identifier}})</span>
        <span class="ml ml-2">Proxy # ({{this.proxyIdentifier}})</span>

        <button data-participantSid="{{this.sid}}" data-serviceSid="{{serviceSid}}" data-sessionSid="{{sessionSid}}" id="del{{@index}}" class="btn btn-danger float-right">Delete</button>
        {{#ifCond ../participants.length ">" 1}}
            <a href="#modalCall" data-participantPhone="{{this.identifier}}" data-proxyPhone="{{this.proxyIdentifier}}" id="dial{{@index}}" role="button" class="mr-4 btn btn-success float-right" data-toggle="modal" >Dial</a>
        {{/ifCond}}
    </li>
    {{/each}}
</ul>
<br>

<!-- Button HTML (to Trigger Modal) -->
<a href="#modalParticipant" role="button" class="mr-4 btn btn-lg btn-primary" data-toggle="modal">Quick Create</a>

<!-- Modal HTML -->

    <div id="modalParticipant" class="modal fade" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Create Participant</h5>
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                </div>
                <form action="#" class="needs-validation" novalidate="">
                    <div class="modal-body">
                        <label for="friendlyName" class="mr-2">Friendly Name:</label>
                            <input class="form-control" id="friendlyName" type="text" required></input>
                            <div class="invalid-feedback">
                                Please provide a Friendly Name.
                            </div>
                        <label for="identifier" class="mr-2">Participant Phone #:</label>
                            <input class="form-control" id="identifier"  type="tel" pattern="^\+?[1-9]\d{4,14}$" required></input>
                            <div class="invalid-feedback">
                                Needs to be a valid E.164 Phone Number.
                            </div>
                        <label for="proxyIdentifier" class="mr-2">Assigned Proxy # <i>(optional)</i>:</label>
                            <input class="form-control" id="proxyIdentifier"  type="tel"></input>
                            <div class="invalid-feedback">
                                Needs to be a valid E.164 Phone Number.
                            </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                        <button data-serviceSid="{{serviceSid}}" data-sessionSid="{{sessionSid}}" id="createParticipant" type="submit" class="btn btn-primary">Submit</button>
                    </div>
                </form>
                <div id="modal-errorCreate" class="mx-4 alert alert-danger" role="alert" style="display:none">
                    <span id="errorMsgCreate"></span>
                </div>
                
            </div>
        </div>
    </div>
        <div id="modalCall" class="modal fade" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Initiate Call</h5>
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                </div>
                    <div class="modal-body">
                        <p>Are you sure you want to place a proxy call?</p>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                        <button data-participantPhone="" id="initiateDial" type="button" class="btn btn-primary">Place Call</button>
                        <button id="hangupCall" type="button" class="btn btn-danger" style="display: none">Hangup Call</button>
                    </div>
                <div id="modal-errorDial" class="mx-4 alert alert-danger" role="alert" style="display:none">
                    <p id="errorMsgDial"></p>
                </div>
                <div id="modal-successDial" class="mx-4 alert alert-success" role="alert" style="display:none">
                    <p id="successMsgDial"></p>
                </div>                
            </div>
        </div>
    </div>
<br>
<span hidden id="JWT"></span>
<div id="errorDiv" class="mx-4 alert alert-danger" role="alert" style="display:none">
    <span id="errorMsgMain"></span>
</div>

<script>
    $(document).ready(function(){
        $('#identifier, #proxyIdentifier').inputmask({
            "regex": "^\\+?[1-9]\\d{4,14}$"
                             {{!-- "regex": "\\+?(9[976]\\d|8[987530]\\d|6[987]\\d|5[90]\\d|42\\d|3[875]\\d|2[98654321]\\d|9[8543210]|8[6421]|6[6543210]|5[87654321]|4[987654310]|3[9643210]|2[70]|7|1)?\\W*\\d\\W*\\d\\W*\\d\\W*\\d\\W*\\d\\W*\\d\\W*\\d\\W*\\d\\W*(\\d{1,2})$" --}}
                               {{!-- "regex": "^(?:(?:\\+?1\\s*(?:[.-]\\s*)?)?(?:(\\s*([2-9]1[02-9]|[2-9][02-8]1|[2-9][02-8][02-9])\\s*)|([2-9]1[02-9]|[2-9][02-8]1|[2-9][02-8][02-9]))\\s*(?:[.-]\\s*)?)?([2-9]1[02-9]|[2-9][02-9]1|[2-9][02-9]{2})\\s*(?:[.-]\\s*)?([0-9]{4})$" --}}
        
                                {{!-- "regex": "^(?:(?:\\+?1\\s*(?:[.-]\\s*)?)?(?:\\(\\s*([2-9]1[02-9]|[2-9][02-8]1|[2-9][02-8][02-9])\\s*\\)|([2-9]1[02-9]|[2-9][02-8]1|[2-9][02-8][02-9]))\\s*(?:[.-]\\s*)?)?([2-9]1[02-9]|[2-9][02-9]1|[2-9][02-9]{2})\\s*(?:[.-]\\s*)?([0-9]{4})(?:\\s*(?:#|x\\.?|ext\\.?|extension)\\s*(\\d+))?$" --}}
        }); //specifying options
    });

    $(`[id^=del]`).click((event) => {
        let participantSid = event.currentTarget.attributes.getNamedItem("data-participantSid").value;
        let serviceSid = event.currentTarget.attributes.getNamedItem("data-serviceSid").value;
        let sessionSid = event.currentTarget.attributes.getNamedItem("data-sessionSid").value;

        $.ajax({
            url: `/participantDelete?serviceSid=${serviceSid}&sessionSid=${sessionSid}&participantSid=${participantSid}`,
            type: 'POST',
        }).done((data) => {
            location.reload(); //Implement partial refresh for production code, but for ease of demo, just reload the page
            //setTimeout(location.reload.bind(location), 8000);
        }).fail((xhr, status, error) => {
            $('#errorDiv').show();
            $('#errorMsgMain').text(xhr.responseText);
        });
    });

    $('.needs-validation').submit((event) => {
        if ($('.needs-validation')[0].checkValidity() === false) {
            event.preventDefault();
            event.stopPropagation();
            $('.needs-validation').addClass('was-validated');
        }
        else{
            $('.needs-validation').addClass('was-validated');
            event.preventDefault(); //This is absolutly necessary to prevent Promise Rejection warnings
            let serviceSid = event.currentTarget.createParticipant.attributes.getNamedItem("data-serviceSid").value;
            let sessionSid = event.currentTarget.createParticipant.attributes.getNamedItem("data-sessionSid").value;
            let friendlyname = event.currentTarget.friendlyName.value;
            let identifier = event.currentTarget.identifier.value.replace(/\D/g,'');
            let proxyIdentifier = event.currentTarget.proxyIdentifier.value.replace(/\D/g,'');
            $.ajax({
                url: `/createParticipant?proxyIdentifier=${proxyIdentifier}&serviceSid=${serviceSid}&sessionSid=${sessionSid}&friendlyName=${friendlyname}&identifier=${identifier}`,
                type: 'POST',
            }).done((data) => {
                location.reload(); 
            }).fail((xhr, status, error) => {
                $('#modal-errorCreate').show();
                $('#errorMsgCreate').text(xhr.responseText);
            }).always((always) => {
                console.log('always');
            })          
        }

    });

    $('#modalCall').on('show.bs.modal', function(event) {
        let participantPhone = event.relatedTarget.dataset.participantphone;
        let proxyPhone = event.relatedTarget.dataset.proxyphone;
        $.ajax({
            url: `/proxyAccessToken`,
            type: 'POST',
        }).done((data) => {
            $('#initiateDial').attr('data-participantPhone', `${participantPhone}`);
            $('#initiateDial').attr('data-proxyPhone', `${proxyPhone}`);
            //$('#JWT').text(data); //Only for Demo purposes. Need to securely store token for prduction code
            sessionStorage.setItem('accessToken', data);
            $('#modal-successDial').show();
            $('#successMsgDial').text("JWT Token Generated Successfully");
        }).fail((xhr, status, error) => {
            $('#JWT').empty(); //clear token value
            $('#errorMsgMain').text(xhr.responseText);
            $('#modalCall').hide();
        })
    });
    $('#modalCall').on('hide.bs.modal', function(e) {
   
    });

    $('#initiateDial').click((event) => {
        let participantPhone = event.currentTarget.attributes.getNamedItem("data-participantPhone").value;
        let proxyPhone = event.currentTarget.attributes.getNamedItem("data-proxyPhone").value;
        //let token = $('#JWT').text();
        let token = sessionStorage.getItem('accessToken');

        // Setup Twilio.Device
        device = new Twilio.Device(token, {
        // Set Opus as our preferred codec. Opus generally performs better, requiring less bandwidth and
        // providing better audio quality in restrained network conditions. Opus will be default in 2.0.
        codecPreferences: ['opus', 'pcmu'],
        // Use fake DTMF tones client-side. Real tones are still sent to the other end of the call,
        // but the client-side DTMF tones are fake. This prevents the local mic capturing the DTMF tone
        // a second time and sending the tone twice. This will be default in 2.0.
        fakeLocalDTMF: true,
      });

      device.on('ready',function (device) {
        console.log('Twilio.Device Ready!');
        var params = {
            To: proxyPhone,
            From: participantPhone
        };

        if(device){
            device.connect(params);
        }
      });

    $('#hangupCall').click((event) => {
        if (device) {
        device.disconnectAll();
        }
      });

      device.on('error', function (error) {
        console.log('Twilio.Device Error: ' + error.message);
        $('#modal-errorCreate').show();
        $('#errorMsgCreate').text(error.message);
        if (device) {
            device.disconnectAll();
        }
      });

      device.on('connect', function (conn) {
        console.log('Successfully established call!');
        document.getElementById('initiateDial').style.display = 'none';
        document.getElementById('hangupCall').style.display = 'inline';
        //volumeIndicators.style.display = 'block';
        //bindVolumeIndicators(conn);
      });

      device.on('disconnect', function (conn) {
        console.log('Call ended.');
        document.getElementById('initiateDial').style.display = 'inline';
        document.getElementById('hangupCall').style.display = 'none';
        //volumeIndicators.style.display = 'none';
      });
    })

</script>


